<%- include('partials/header') %>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
      <div class="position-sticky pt-3">
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link active" href="/passwords/dashboard">
              <i class="bi bi-key me-2"></i>
              All Passwords
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/passwords/add">
              <i class="bi bi-plus-circle me-2"></i>
              Add Password
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#generatePasswordModal">
              <i class="bi bi-shuffle me-2"></i>
              Generate Password
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/passwords/audit-trail">
              <i class="bi bi-person me-2"></i>
              Audit Trail
            </a>
          </li>
          
          <li class="nav-item">
            <a class="nav-link" href="/passwords/profile">
              <i class="bi bi-person me-2"></i>
              My Profile
            </a>
          </li>
          <li class="nav-item mt-3">
            <a class="nav-link text-danger" href="/auth/logout">
              <i class="bi bi-box-arrow-right me-2"></i>
              Logout
            </a>
          </li>
        </ul>
      </div>
    </nav>
    
    <!-- Main content -->
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Your Passwords</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <a href="/passwords/add" class="btn btn-sm btn-primary">
            <i class="bi bi-plus"></i> Add New
          </a>
        </div>
      </div>
      
      <% if (locals.success) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= success %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% } %>
      
      <% if (locals.warning) { %>
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
          <%= warning.message %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% } %>
      
      <% if (locals.passwords && passwords.length > 0) { %>
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead>
              <tr>
                <th>Title</th>
                <th>Username / Email</th>
                <th>Password</th>
                <th>Strength</th>
                <th>Last Updated</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% passwords.forEach(password => { %>
                <tr>
                  <td>
                    <strong><%= password.title %></strong>
                    <% if (password.website) { %>
                      <div><small><a href="<%= password.website.startsWith('http') ? password.website : 'https://' + password.website %>" target="_blank"><%= password.website %></a></small></div>
                    <% } %>
                  </td>
                  <td>
                    <% if (password.username) { %>
                      <div><%= password.username %></div>
                    <% } %>
                    <% if (password.email) { %>
                      <div><%= password.email %></div>
                    <% } %>
                  </td>
                  <td>
                    <div class="password-field">
                      <input type="password" class="form-control form-control-sm password-value" value="<%= password.passwordText %>" readonly>
                      <button class="btn btn-sm btn-outline-secondary toggle-password-btn">
                        <i class="bi bi-eye"></i>
                      </button>
                      <button class="btn btn-sm btn-outline-secondary copy-password-btn" data-password="<%= password.passwordText %>">
                        <i class="bi bi-clipboard"></i>
                      </button>
                    </div>
                  </td>
                  <td>
                    <div class="progress" style="height: 5px;">
                      <div class="progress-bar strength-bar"
                           role="progressbar"
                           data-strength="<%= password.strengthScore %>"
                           data-category="<%= password.strengthScore < 30 ? 'weak' : (password.strengthScore < 70 ? 'moderate' : 'strong') %>">
                      </div>
                    </div>
                    <small><%= password.strengthScore < 30 ? 'Weak' : (password.strengthScore < 70 ? 'Moderate' : 'Strong') %></small>
                  </td>
                  <td>
                    <small><%= new Date(password.updatedAt).toLocaleDateString() %></small>
                  </td>
                  <td>
                    <div class="btn-group">
                      <a href="/passwords/edit/<%= password._id %>" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-pencil"></i>
                      </a>
                      <button class="btn btn-sm btn-outline-secondary check-pwned-btn" data-password="<%= password.passwordText %>" data-id="<%= password._id %>">
                        <i class="bi bi-shield-check"></i>
                      </button>
                      <button class="btn btn-sm btn-outline-danger delete-password-btn" data-id="<%= password._id %>">
                        <i class="bi bi-trash"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      <% } else { %>
        <div class="alert alert-info">
          <p>You don't have any saved passwords yet. <a href="/passwords/add">Add your first password</a>.</p>
        </div>
      <% } %>
    </main>
  </div>
</div>

<!-- Generate Password Modal -->
<div class="modal fade" id="generatePasswordModal" tabindex="-1" aria-labelledby="generatePasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="generatePasswordModalLabel">Generate Password</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="generated-password" class="form-label">Password</label>
          <div class="input-group">
            <input type="text" class="form-control" id="generated-password" readonly>
            <button class="btn btn-outline-secondary" id="copy-generated-password">
              <i class="bi bi-clipboard"></i>
            </button>
          </div>
        </div>
        
        <div class="mb-3">
          <div class="progress" style="height: 5px;">
            <div id="generated-password-strength" class="progress-bar" role="progressbar"></div>
          </div>
          <small id="generated-password-strength-text" class="form-text"></small>
        </div>
        
        <div class="mb-3">
          <label for="password-length" class="form-label">Length: <span id="length-value">16</span></label>
          <input type="range" class="form-range" id="password-length" min="8" max="64" value="16">
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="uppercase-check" checked>
              <label class="form-check-label" for="uppercase-check">
                Include Uppercase Letters
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="lowercase-check" checked>
              <label class="form-check-label" for="lowercase-check">
                Include Lowercase Letters
              </label>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="numbers-check" checked>
              <label class="form-check-label" for="numbers-check">
                Include Numbers
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="symbols-check" checked>
              <label class="form-check-label" for="symbols-check">
                Include Symbols
              </label>
            </div>
          </div>
        </div>
        
        <button id="generate-password-btn" class="btn btn-primary w-100 mt-3">Generate</button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="use-generated-password" data-bs-dismiss="modal">Use This Password</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize strength bars
    document.querySelectorAll('.strength-bar').forEach(function(bar) {
      const strength = bar.getAttribute('data-strength');
      const category = bar.getAttribute('data-category');
      
      // Set width
      bar.style.width = strength + '%';
      
      // Set color class
      if (category === 'weak') {
        bar.classList.add('bg-danger');
      } else if (category === 'moderate') {
        bar.classList.add('bg-warning');
      } else {
        bar.classList.add('bg-success');
      }
    });
    
    // Toggle password visibility
    document.querySelectorAll('.toggle-password-btn').forEach(button => {
      button.addEventListener('click', function() {
        const passwordField = this.parentElement.querySelector('input');
        const icon = this.querySelector('i');
        
        if (passwordField.type === 'password') {
          passwordField.type = 'text';
          icon.classList.remove('bi-eye');
          icon.classList.add('bi-eye-slash');
        } else {
          passwordField.type = 'password';
          icon.classList.remove('bi-eye-slash');
          icon.classList.add('bi-eye');
        }
      });
    });
    
    // Copy password to clipboard
    document.querySelectorAll('.copy-password-btn').forEach(button => {
      button.addEventListener('click', function() {
        const password = this.getAttribute('data-password');
        navigator.clipboard.writeText(password).then(() => {
          const originalHTML = this.innerHTML;
          this.innerHTML = '<i class="bi bi-check"></i>';
          setTimeout(() => {
            this.innerHTML = originalHTML;
          }, 1500);
        });
      });
    });
    
    // Delete password
    document.querySelectorAll('.delete-password-btn').forEach(button => {
      button.addEventListener('click', function() {
        if (confirm('Are you sure you want to delete this password?')) {
          const id = this.getAttribute('data-id');
          
          fetch(`/passwords/delete/${id}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.reload();
            } else {
              alert('Failed to delete password');
            }
          })
          .catch(error => {
            console.error('Error deleting password:', error);
            alert('Failed to delete password');
          });
        }
      });
    });
    
    // Generate password
    const generatePassword = () => {
      const length = document.getElementById('password-length').value;
      const uppercase = document.getElementById('uppercase-check').checked;
      const lowercase = document.getElementById('lowercase-check').checked;
      const numbers = document.getElementById('numbers-check').checked;
      const symbols = document.getElementById('symbols-check').checked;
      
      // At least one character type must be selected
      if (!uppercase && !lowercase && !numbers && !symbols) {
        alert('Please select at least one character type');
        return;
      }
      
      fetch('/passwords/generate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          length,
          uppercase,
          lowercase,
          numbers,
          symbols
        })
      })
      .then(response => response.json())
      .then(data => {
        document.getElementById('generated-password').value = data.password;
        
        // Update strength meter
        const strengthMeter = document.getElementById('generated-password-strength');
        const strengthText = document.getElementById('generated-password-strength-text');
        
        strengthMeter.style.width = data.strength.score + '%';
        strengthText.textContent = data.strength.strengthCategory;
        
        // Update classes based on strength
        strengthMeter.className = 'progress-bar';
        if (data.strength.score < 30) {
          strengthMeter.classList.add('bg-danger');
        } else if (data.strength.score < 70) {
          strengthMeter.classList.add('bg-warning');
        } else {
          strengthMeter.classList.add('bg-success');
        }
      })
      .catch(error => {
        console.error('Error generating password:', error);
        alert('Failed to generate password');
      });
    };
    
    // Update length value display
    document.getElementById('password-length').addEventListener('input', function() {
      document.getElementById('length-value').textContent = this.value;
    });
    
    // Generate password button
    document.getElementById('generate-password-btn').addEventListener('click', generatePassword);
    
    // Copy generated password button
    document.getElementById('copy-generated-password').addEventListener('click', function() {
      const password = document.getElementById('generated-password').value;
      if (password) {
        navigator.clipboard.writeText(password).then(() => {
          const originalHTML = this.innerHTML;
          this.innerHTML = '<i class="bi bi-check"></i>';
          setTimeout(() => {
            this.innerHTML = originalHTML;
          }, 1500);
        });
      }
    });
    
    // Generate a password when the modal is shown
    document.getElementById('generatePasswordModal').addEventListener('shown.bs.modal', function() {
      generatePassword();
    });
  });
</script>

<%- include('partials/footer') %>