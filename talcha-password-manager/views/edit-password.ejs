<%- include('partials/header') %>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
      <div class="position-sticky pt-3">
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link" href="/passwords/dashboard">
              <i class="bi bi-key me-2"></i>
              All Passwords
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/passwords/add">
              <i class="bi bi-plus-circle me-2"></i>
              Add Password
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#generatePasswordModal">
              <i class="bi bi-shuffle me-2"></i>
              Generate Password
            </a>
          </li>

          <li class="nav-item">
            <a class="nav-link active" href="/passwords/audit-trail">
              <i class="bi bi-person me-2"></i>
              Audit Trail
            </a>
          </li>
          
        <li class="nav-item">
            <a class="nav-link" href="/passwords/profile">
              <i class="bi bi-person me-2"></i>
              My Profile
            </a>
          <li class="nav-item mt-3">
            <a class="nav-link text-danger" href="/auth/logout">
              <i class="bi bi-box-arrow-right me-2"></i>
              Logout
            </a>
          </li>
        </ul>
      </div>
    </nav>
    
    <!-- Main content -->
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Edit Password</h1>
      </div>
      
      <% if (locals.error) { %>
        <div class="alert alert-danger">
          <%= error %>
        </div>
      <% } %>
      
      <% if (locals.warning) { %>
        <div class="alert alert-warning">
          <i class="bi bi-exclamation-triangle-fill me-2"></i>
          <strong>Password Security Warning:</strong>
          <p class="mb-0 mt-2"><%= warning %></p>
          <% if (locals.compromised) { %>
            <div class="mt-3">
              <button type="button" class="btn btn-sm btn-warning" id="use-anyway-btn">Use Password Anyway</button>
              <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#generatePasswordModal">Generate Secure Password</button>
            </div>
          <% } %>
        </div>
      <% } %>
      
      <div class="row">
        <div class="col-md-8">
          <div class="card">
            <div class="card-body">
              <form action="/passwords/edit/<%= password._id %>" method="POST">
                <div class="mb-3">
                  <label for="title" class="form-label">Title <span class="text-danger">*</span></label>
                  <input type="text" class="form-control" id="title" name="title" value="<%= password.title %>" required>
                  <div class="form-text">A descriptive name for this password</div>
                </div>
                
                <div class="row">
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label for="website" class="form-label">Website URL</label>
                      <input type="text" class="form-control" id="website" name="website" value="<%= password.website || '' %>">
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label for="category" class="form-label">Category</label>
                      <select class="form-select" id="category" name="category">
                        <option value="General" <%= password.category === 'General' ? 'selected' : '' %>>General</option>
                        <option value="Social" <%= password.category === 'Social' ? 'selected' : '' %>>Social Media</option>
                        <option value="Work" <%= password.category === 'Work' ? 'selected' : '' %>>Work</option>
                        <option value="Finance" <%= password.category === 'Finance' ? 'selected' : '' %>>Finance</option>
                        <option value="Email" <%= password.category === 'Email' ? 'selected' : '' %>>Email</option>
                        <option value="Entertainment" <%= password.category === 'Entertainment' ? 'selected' : '' %>>Entertainment</option>
                        <option value="Shopping" <%= password.category === 'Shopping' ? 'selected' : '' %>>Shopping</option>
                        <option value="Other" <%= password.category === 'Other' ? 'selected' : '' %>>Other</option>
                      </select>
                    </div>
                  </div>
                </div>
                
                <div class="row">
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label for="username" class="form-label">Username</label>
                      <input type="text" class="form-control" id="username" name="username" value="<%= password.username || '' %>">
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label for="email" class="form-label">Email</label>
                      <input type="email" class="form-control" id="email" name="email" value="<%= password.email || '' %>">
                    </div>
                  </div>
                </div>
                
                <div class="mb-3">
                  <label for="passwordText" class="form-label">Password <span class="text-danger">*</span></label>
                  <div class="input-group">
                    <input type="password" class="form-control" id="passwordText" name="passwordText" value="<%= password.passwordText %>" required>
                    <button class="btn btn-outline-secondary toggle-password" type="button">
                      <i class="bi bi-eye"></i>
                    </button>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#generatePasswordModal">
                      Generate
                    </button>
                  </div>
                  <div class="mt-2">
                    <div class="progress" style="height: 5px;">
                      <div id="password-strength-meter" class="progress-bar" role="progressbar"></div>
                    </div>
                    <small id="password-strength-text" class="form-text"></small>
                  </div>
                </div>
                
                <div class="mb-3">
                  <label for="notes" class="form-label">Notes</label>
                  <textarea class="form-control" id="notes" name="notes" rows="3"><%= password.notes || '' %></textarea>
                </div>
                
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                  <a href="/passwords/dashboard" class="btn btn-outline-secondary me-md-2">Cancel</a>
                  <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- Generate Password Modal -->
<div class="modal fade" id="generatePasswordModal" tabindex="-1" aria-labelledby="generatePasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="generatePasswordModalLabel">Generate Password</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="generated-password" class="form-label">Password</label>
          <div class="input-group">
            <input type="text" class="form-control" id="generated-password" readonly>
            <button class="btn btn-outline-secondary" id="copy-generated-password">
              <i class="bi bi-clipboard"></i>
            </button>
          </div>
        </div>
        
        <div class="mb-3">
          <div class="progress" style="height: 5px;">
            <div id="generated-password-strength" class="progress-bar" role="progressbar"></div>
          </div>
          <small id="generated-password-strength-text" class="form-text"></small>
        </div>
        
        <div class="mb-3">
          <label for="password-length" class="form-label">Length: <span id="length-value">16</span></label>
          <input type="range" class="form-range" id="password-length" min="8" max="64" value="16">
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="uppercase-check" checked>
              <label class="form-check-label" for="uppercase-check">
                Include Uppercase Letters
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="lowercase-check" checked>
              <label class="form-check-label" for="lowercase-check">
                Include Lowercase Letters
              </label>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="numbers-check" checked>
              <label class="form-check-label" for="numbers-check">
                Include Numbers
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="checkbox" value="" id="symbols-check" checked>
              <label class="form-check-label" for="symbols-check">
                Include Symbols
              </label>
            </div>
          </div>
        </div>
        
        <button id="generate-password-btn" class="btn btn-primary w-100 mt-3">Generate</button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="use-generated-password" data-bs-dismiss="modal">Use This Password</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Toggle password visibility
    document.querySelector('.toggle-password').addEventListener('click', function() {
      const passwordInput = document.getElementById('passwordText');
      const icon = this.querySelector('i');
      
      if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        icon.classList.remove('bi-eye');
        icon.classList.add('bi-eye-slash');
      } else {
        passwordInput.type = 'password';
        icon.classList.remove('bi-eye-slash');
        icon.classList.add('bi-eye');
      }
    });
    
    // Check password strength
    const passwordInput = document.getElementById('passwordText');
    const strengthMeter = document.getElementById('password-strength-meter');
    const strengthText = document.getElementById('password-strength-text');
    
    // Trigger password strength check on page load
    if (passwordInput.value) {
      checkPasswordStrength(passwordInput.value);
    }
    
    passwordInput.addEventListener('input', function() {
      checkPasswordStrength(this.value);
    });
    
    function checkPasswordStrength(password) {
      if (password === '') {
        strengthMeter.style.width = '0%';
        strengthMeter.className = 'progress-bar';
        strengthText.textContent = '';
        return;
      }
      
      fetch('/passwords/check-strength', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ password })
      })
      .then(response => response.json())
      .then(data => {
        strengthMeter.style.width = data.score + '%';
        strengthText.textContent = data.strengthCategory;
        
        // Update classes based on strength
        strengthMeter.className = 'progress-bar';
        if (data.score < 30) {
          strengthMeter.classList.add('bg-danger');
        } else if (data.score < 70) {
          strengthMeter.classList.add('bg-warning');
        } else {
          strengthMeter.classList.add('bg-success');
        }
      })
      .catch(error => {
        console.error('Error checking password strength:', error);
      });
    }
    
    // Generate password
    const generatePassword = () => {
      const length = document.getElementById('password-length').value;
      const uppercase = document.getElementById('uppercase-check').checked;
      const lowercase = document.getElementById('lowercase-check').checked;
      const numbers = document.getElementById('numbers-check').checked;
      const symbols = document.getElementById('symbols-check').checked;
      
      // At least one character type must be selected
      if (!uppercase && !lowercase && !numbers && !symbols) {
        alert('Please select at least one character type');
        return;
      }
      
      fetch('/passwords/generate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          length,
          uppercase,
          lowercase,
          numbers,
          symbols
        })
      })
      .then(response => response.json())
      .then(data => {
        document.getElementById('generated-password').value = data.password;
        
        // Update strength meter
        const strengthMeter = document.getElementById('generated-password-strength');
        const strengthText = document.getElementById('generated-password-strength-text');
        
        strengthMeter.style.width = data.strength.score + '%';
        strengthText.textContent = data.strength.strengthCategory;
        
        // Update classes based on strength
        strengthMeter.className = 'progress-bar';
        if (data.strength.score < 30) {
          strengthMeter.classList.add('bg-danger');
        } else if (data.strength.score < 70) {
          strengthMeter.classList.add('bg-warning');
        } else {
          strengthMeter.classList.add('bg-success');
        }
      })
      .catch(error => {
        console.error('Error generating password:', error);
        alert('Failed to generate password');
      });
    };
    
    // Update length value display
    document.getElementById('password-length').addEventListener('input', function() {
      document.getElementById('length-value').textContent = this.value;
    });
    
    // Generate password button
    document.getElementById('generate-password-btn').addEventListener('click', generatePassword);
    
    // Copy generated password
    document.getElementById('copy-generated-password').addEventListener('click', function() {
      const password = document.getElementById('generated-password').value;
      if (password) {
        navigator.clipboard.writeText(password).then(() => {
          const originalHTML = this.innerHTML;
          this.innerHTML = '<i class="bi bi-check"></i>';
          setTimeout(() => {
            this.innerHTML = originalHTML;
          }, 1500);
        });
      }
    });
    
    // Use generated password
    document.getElementById('use-generated-password').addEventListener('click', function() {
      const generatedPassword = document.getElementById('generated-password').value;
      if (generatedPassword) {
        document.getElementById('passwordText').value = generatedPassword;
        
        // Trigger the input event to update the strength meter
        checkPasswordStrength(generatedPassword);
      }
    });
    
    // Generate a password when the modal is shown
    document.getElementById('generatePasswordModal').addEventListener('shown.bs.modal', function() {
      generatePassword();
    });
    
    // Handle "Use Password Anyway" button if it exists
    const useAnywayBtn = document.getElementById('use-anyway-btn');
    if (useAnywayBtn) {
      useAnywayBtn.addEventListener('click', function()
       { console.log
        // Add a hidden field to the form to indicate user wants to use the password anyway
        const form = document.querySelector('form');
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'ignoreCompromised';
        hiddenInput.value = 'true';
        form.appendChild(hiddenInput);
        
        // Submit the form
        form.submit();
      });
    }
  });
</script>

<%- include('partials/footer') %>